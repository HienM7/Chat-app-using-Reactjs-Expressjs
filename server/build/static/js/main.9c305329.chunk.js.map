{"version":3,"sources":["Store/MessageStore.js","components/JoinRoom.js","components/CreateRoom.js","components/RoomItem.js","components/AccountMenu.js","Store/UserStore.js","components/DashBoard.js","components/ConfirmationAccount.js","components/Login.js","components/Register.js","App.js","serviceWorker.js","index.js"],"names":["socket","MessageContext","React","createContext","initialState","reducer","state","action","payload","roomId","fromUser","msg","type","messages","user","content","Error","sendChatAction","emit","MessageStore","props","children","useReducer","allChats","dispatch","useState","loading","changeLoading","useEffect","a","axios","get","res","data","success","allMessage","console","log","fetchData","io","on","Provider","value","useStyles","makeStyles","theme","form","position","top","left","width","height","backgroundColor","borderRadius","padding","container","zIndex","textField","marginBottom","button","margin","JoinRoom","setRoomId","disableBtn","changeDisable","error","setError","displayState","changeDisplayState","classes","useContext","doJoinRoom","e","preventDefault","post","Button","variant","color","onClick","className","onSubmit","Alert","severity","style","TextField","label","onChange","target","size","disabled","CreateRoom","roomName","setRoomName","active","transition","opacity","RoomItem","isActive","changeActive","primary","currentRoom","rest","ListItem","ListItemText","AccountMessage","open","setOpen","anchorRef","useRef","handleClose","event","current","contains","prevOpen","focus","doLogout","defaults","headers","common","localStorage","removeItem","window","location","href","ref","aria-controls","undefined","aria-haspopup","Popper","anchorEl","role","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","id","MenuItem","AuthenticationContext","isLoggedIn","username","userId","avatarUrl","isConfirmation","UserStore","userInfo","token","getItem","result","DashBoard","marginTop","spacing","paddingBottom","right","fontSize","flex","display","alignItems","roomWindow","roomDetails","justifyContent","chatWindow","boxShadow","messageWindow","chatBox","marginLeft","flexGrow","chip","marginRight","float","friendAccount","myAccount","flexSpaceBetween","listRoom","Object","keys","changeCurrentRoom","message","setMessage","elevation","Typography","component","mode","List","map","index","key","name","_id","Chip","avatar","Avatar","alt","src","trim","ConfirmationAccount","LoginPage","disableButton","alert","input","register","textDecoration","Login","email","setEmail","password","setPassword","changeDisableButton","setAlert","doLogin","setItem","disable","to","registerPage","Register","history","useHistory","confirmPassword","setConfirmPassword","setName","doRegister","push","App","exact","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.9c305329.chunk.js","sourcesContent":["import React, { useReducer, useEffect, useState } from 'react';\r\n\r\nimport axios from 'axios';\r\nimport io from 'socket.io-client';\r\n\r\nexport const MessageContext = React.createContext();\r\n\r\nconst initialState = {};\r\n\r\nconst reducer = function(state, action) {\r\n  const { roomId, fromUser, msg } = action.payload;\r\n  switch (action.type) {\r\n    case \"RECEIVE_MESSAGE\":\r\n      return {\r\n        ...state,\r\n        [roomId]: {\r\n          ...state[roomId],\r\n          messages: [\r\n            ...state[roomId].messages,\r\n            { \r\n              user: fromUser,\r\n              content: msg\r\n            }\r\n          ]\r\n        }\r\n      };\r\n    case \"JOIN_NEW_ROOM\":\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    case \"RECEIVE_DATA_FROM_SERVER\": \r\n      return action.payload;\r\n    default:\r\n      throw new Error(\"Type of action no exist\");\r\n  }\r\n}\r\n    \r\nlet socket;\r\nconst PATH = '/';\r\n \r\nfunction sendChatAction(payload) {\r\n  socket.emit(\"chat message\", payload);\r\n}\r\n\r\nfunction MessageStore(props) {\r\n  const { children } = props;  \r\n  const [allChats, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const [loading, changeLoading] = useState(true);\r\n  \r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await axios.get(\"/data/getMessage\");\r\n        const data = res.data;\r\n        if (!data.success) {\r\n          return;\r\n        }\r\n        dispatch({\r\n          type: \"RECEIVE_DATA_FROM_SERVER\",\r\n          payload: data.allMessage\r\n        });\r\n        changeLoading(false);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n    fetchData();\r\n    socket = io(PATH);\r\n    socket.on(\"chat message\", (payload) => {\r\n      dispatch({\r\n        type: \"RECEIVE_MESSAGE\",\r\n        payload: payload\r\n      })\r\n    });\r\n    // socket.on(\"message typing\", ()  )\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <h3>Loading...</h3>\r\n  }\r\n\r\n  return (\r\n    <MessageContext.Provider \r\n      value={{\r\n        allChats, \r\n        sendChatAction,\r\n        dispatch\r\n      }}\r\n    >\r\n      {children}\r\n    </MessageContext.Provider>\r\n  );\r\n}\r\n\r\nexport default MessageStore;\r\n","import React, { useState, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, TextField } from  '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport axios from 'axios';\r\n\r\n\r\nimport { MessageContext } from '../Store/MessageStore';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  form: {\r\n    position: \"absolute\",\r\n    top: \"30%\",\r\n    left: \"45%\",\r\n    width: \"300px\",\r\n    height: \"250px\",\r\n    backgroundColor: \"#FFF\",\r\n    borderRadius: \"4px\",\r\n    padding: \"30px\",\r\n    \r\n  },\r\n  container: {\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    zIndex: 100,\r\n    backgroundColor: \"#000000a6\"\r\n  },\r\n  textField: {\r\n    width: \"100%\",\r\n    marginBottom: \"40px\"\r\n  },\r\n  button: {\r\n    margin: \"2px\"\r\n  }\r\n}))\r\n\r\nfunction JoinRoom(props) {\r\n  const [roomId, setRoomId] = useState('');\r\n  const [disableBtn, changeDisable] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  const [displayState, changeDisplayState] = useState(false);\r\n  const classes = useStyles();\r\n  const { dispatch } = useContext(MessageContext);\r\n\r\n  const doJoinRoom = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      changeDisable(true);\r\n      const res = await axios.post('/room/join', {\r\n        roomId: roomId\r\n      });\r\n      const data = res.data;\r\n      if (!data.success) {\r\n        setError(true);\r\n        changeDisable(false);\r\n        return;\r\n      }\r\n      delete data.success;\r\n      dispatch({\r\n        type: \"JOIN_NEW_ROOM\",\r\n        payload: data\r\n      });\r\n      setRoomId(\"\");\r\n      changeDisplayState(false);\r\n      changeDisable(false);\r\n    } catch (e) {\r\n      setError(true);\r\n      changeDisable(false);\r\n      console.log(e);\r\n    }\r\n  }\r\n  \r\n  const displayForm = () => {\r\n    changeDisplayState(true);\r\n  }\r\n  \r\n  const hiddenForm = () => {\r\n    changeDisplayState(false);\r\n    setRoomId(\"\");\r\n    setError(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={displayForm}>\r\n        Join room\r\n      </Button>\r\n      { displayState &&\r\n        <div className={classes.container}>\r\n          <form onSubmit={doJoinRoom} className={classes.form}>\r\n            <h3>Join Room</h3>\r\n            {error ? <Alert severity=\"error\">Can't join room</Alert> : <div style={{width: \"100%\", height:\"20px\"}}></div>}\r\n            <TextField \r\n              label=\"Type Room ID\" \r\n              value={roomId}\r\n              onChange={(e) => setRoomId(e.target.value)}\r\n              className={classes.textField}\r\n            />\r\n            <Button\r\n              type=\"submit\" \r\n              variant=\"outlined\" \r\n              color=\"primary\" \r\n              size=\"small\"\r\n              className={classes.button}\r\n              disabled={disableBtn}\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Button\r\n              type=\"button\" \r\n              variant=\"outlined\" \r\n              color=\"primary\" \r\n              size=\"small\"\r\n              onClick={hiddenForm}\r\n              className={classes.button}\r\n\r\n            >\r\n              Close\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default JoinRoom;\r\n","import React, { useState, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, TextField } from  '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport axios from 'axios';\r\n\r\n\r\nimport { MessageContext } from '../Store/MessageStore';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  form: {\r\n    position: \"absolute\",\r\n    top: \"30%\",\r\n    left: \"45%\",\r\n    width: \"300px\",\r\n    height: \"250px\",\r\n    backgroundColor: \"#FFF\",\r\n    borderRadius: \"4px\",\r\n    padding: \"30px\",\r\n    \r\n  },\r\n  container: {\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    zIndex: 100,\r\n    backgroundColor: \"#000000a6\"\r\n  },\r\n  textField: {\r\n    width: \"100%\",\r\n    marginBottom: \"40px\"\r\n  },\r\n  button: {\r\n    margin: \"2px\"\r\n  }\r\n}))\r\n\r\nfunction CreateRoom(props) {\r\n  const [roomName, setRoomName] = useState('');\r\n  const [disableBtn, changeDisable] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  const [displayState, changeDisplayState] = useState(false);\r\n  const classes = useStyles();\r\n  const { dispatch } = useContext(MessageContext);\r\n\r\n  const doJoinRoom = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      changeDisable(true);\r\n      const res = await axios.post('/room/create', {\r\n        roomName: roomName\r\n      });\r\n      const data = res.data;\r\n      if (!data.success) {\r\n        setError(true);\r\n        changeDisable(false);\r\n        return;\r\n      }\r\n      delete data.success;\r\n      dispatch({\r\n        type: \"JOIN_NEW_ROOM\",\r\n        payload: data\r\n      });\r\n      setRoomName(\"\");\r\n      changeDisplayState(false);\r\n      changeDisable(false);\r\n    } catch (e) {\r\n      setError(true);\r\n      changeDisable(false);\r\n      console.log(e);\r\n    }\r\n  }\r\n  \r\n  const displayForm = () => {\r\n    changeDisplayState(true);\r\n  }\r\n  \r\n  const hiddenForm = () => {\r\n    changeDisplayState(false);\r\n    setRoomName(\"\");\r\n    setError(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={displayForm}>\r\n        Create new room\r\n      </Button>\r\n      { displayState &&\r\n        <div className={classes.container}>\r\n          <form onSubmit={doJoinRoom} className={classes.form}>\r\n            <h3>Create New Room</h3>\r\n            {error ? <Alert severity=\"error\">Can't create room</Alert> : <div style={{width: \"100%\", height:\"20px\"}}></div>}\r\n            <TextField \r\n              label=\"Type Room Name\" \r\n              value={roomName}\r\n              onChange={(e) => setRoomName(e.target.value)}\r\n              className={classes.textField}\r\n            />\r\n            <Button\r\n              type=\"submit\" \r\n              variant=\"outlined\" \r\n              color=\"primary\" \r\n              size=\"small\"\r\n              className={classes.button}\r\n              disabled={disableBtn}\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Button\r\n              type=\"button\" \r\n              variant=\"outlined\" \r\n              color=\"primary\" \r\n              size=\"small\"\r\n              onClick={hiddenForm}\r\n              className={classes.button}\r\n\r\n            >\r\n              Close\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default CreateRoom;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ListItem, ListItemText } from  '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  active: {\r\n    color: \"#fff\",\r\n    backgroundColor: \"#1976d2\",\r\n    transition: \"0.5s\",\r\n    \"&:hover\": {\r\n      color: \"#fff\",\r\n      backgroundColor: \"#1976d2\",\r\n      opacity: \"0.8\"\r\n    }\r\n  }\r\n}))\r\n\r\nfunction RoomItem(props) {\r\n\r\n  const classes = useStyles();\r\n  const [isActive, changeActive] = useState(false);\r\n  const {primary, roomId, currentRoom, ...rest} = props;\r\n\r\n  useEffect(() => {\r\n    if (roomId === currentRoom) {\r\n      changeActive(true);\r\n    } else {\r\n      changeActive(false);\r\n    }\r\n  }, [primary, currentRoom, roomId]);\r\n  console.log(\"RoomItem\")\r\n  return (\r\n    <ListItem {...rest} className={isActive ? classes.active : \"\"} button>\r\n      <ListItemText primary={primary} />\r\n    </ListItem>\r\n  );\r\n\r\n}\r\n\r\nexport default RoomItem;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport axios from 'axios';\r\n\r\nexport default function AccountMessage(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n\r\n  const { children } = props; \r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  const doLogout = () => {\r\n    axios.defaults.headers.common['x-access-token'] = '';\r\n    localStorage.removeItem('token');\r\n    window.location.href = '/';\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <Button\r\n          ref={anchorRef}\r\n          aria-controls={open ? 'menu-list-grow' : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={handleToggle}\r\n        >\r\n          { children }\r\n        </Button>\r\n        <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <MenuList autoFocusItem={open} id=\"menu-list-grow\">\r\n                    <MenuItem onClick={doLogout}>Logout</MenuItem>\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n    </div>\r\n  );\r\n}","import React, { useReducer, useState, useEffect } from 'react';\r\n\r\nimport axios from 'axios';\r\nexport const AuthenticationContext = React.createContext();\r\n\r\nconst initialState = {\r\n  isLoggedIn: false,\r\n};\r\n\r\nconst reducer = function(state, action) {\r\n  const { username, userId, avatarUrl, isConfirmation } = action.payload;\r\n\r\n  switch (action.type) {\r\n    case \"USER_LOGIN\":\r\n      return {\r\n        isLoggedIn: true,\r\n        username,\r\n        userId,\r\n        avatarUrl,\r\n        isConfirmation\r\n      };\r\n    case \"USER_LOGOUT\": \r\n      return {\r\n        isLoggedIn: false,\r\n        username: \"\",\r\n        userId: \"\",\r\n        avatarUrl: \"\"\r\n      };\r\n    default:\r\n      throw new Error(\"Type of action no exist\");\r\n  }\r\n}\r\n    \r\nfunction UserStore(props) {\r\n  const { children } = props; \r\n\r\n  const [userInfo, dispatch] = useReducer(reducer, initialState);\r\n  const [loading, changeLoading] = useState(true);\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        let res = await axios.post(\r\n          \"/auth/checkLogin\",\r\n            {\r\n              token: localStorage.getItem('token')\r\n            }\r\n        );\r\n        let result = res.data;\r\n        if (!result.success) {\r\n          changeLoading(false);\r\n          return;\r\n        }\r\n        axios.defaults.headers.common['x-access-token'] = localStorage.getItem('token');\r\n        const user = {\r\n          username: result.username,\r\n          userId: result.userId,\r\n          avatarUrl: result.avatarUrl,\r\n          isConfirmation: result.isConfirmation\r\n        }\r\n    \r\n        dispatch({\r\n          type: \"USER_LOGIN\",\r\n          payload: user\r\n        });\r\n        changeLoading(false);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>\r\n  }\r\n  \r\n  return (\r\n    <AuthenticationContext.Provider \r\n      value={{\r\n        userInfo, \r\n        dispatch,\r\n      }}\r\n    >\r\n      { children }\r\n    </AuthenticationContext.Provider>\r\n  );\r\n}\r\n\r\nexport default UserStore;\r\n\r\n","import React, { useState, useContext } from 'react';\r\n\r\nimport { Paper, List, Typography, TextField, Button, Chip, Avatar  } from  '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport JoinRoom from './JoinRoom';\r\nimport CreateRoom from './CreateRoom';\r\nimport RoomItem from './RoomItem';\r\nimport AccountMenu from './AccountMenu';\r\nimport { MessageContext } from '../Store/MessageStore';\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\nimport { AuthenticationContext } from '../Store/UserStore';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  DashBoard: {\r\n    marginTop: \"20px\",\r\n    width: \"80%\",\r\n    margin: \"0 auto\",\r\n    padding: theme.spacing(3, 2),\r\n    paddingBottom: \"50px\",\r\n    position: \"relative\"\r\n  },\r\n  username: {\r\n    position: \"absolute\",\r\n    top: \"10px\",\r\n    right: \"20px\",\r\n    fontSize: \"20px\"\r\n  },\r\n  flex: {\r\n    display: \"flex\",\r\n    padding: \"10px\",\r\n    alignItems: \"center\"\r\n  },\r\n  roomWindow: {\r\n    width: \"30%\",\r\n    height: \"450px\",\r\n    // borderRight: \"1px solid rgba(0, 0, 0, 0.2)\",\r\n  },\r\n  roomDetails: {\r\n    display: \"flex\",\r\n    justifyContent: \"Space-Between\",\r\n    alignItems: \"center\"\r\n  },\r\n  chatWindow: {\r\n    width: \"70%\",\r\n    boxShadow: \"-5px 0 10px rgba(0, 0, 0, 0.2)\"\r\n    \r\n  },\r\n  messageWindow: {\r\n    height: \"400px\",\r\n    marginBottom: \"10px\",\r\n  }\r\n  ,\r\n  chatBox: {\r\n    marginLeft: \"20px\",\r\n    flexGrow: 1\r\n  },\r\n  button: {\r\n    marginTop: \"15px\",\r\n    marginLeft: \"10px\",\r\n    height: \"30px\",\r\n    width: \"100px\",\r\n    backgroundColor: \"#1976d2\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#115293\",\r\n    }\r\n  },\r\n  chip: {\r\n    marginRight: \"5px\",\r\n    float: \"right\"\r\n  },\r\n  friendAccount: {\r\n    display: \"flex\",\r\n    padding: \"10px\",\r\n    alignItems: \"center\"\r\n  },\r\n  myAccount: {\r\n    display: \"flex\",\r\n    padding: \"10px\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  flexSpaceBetween: {\r\n    display: \"flex\",\r\n    justifyContent: \"SpaceBetween\"\r\n  }\r\n\r\n}))\r\n\r\nfunction DashBoard(props) {\r\n\r\n  const classes = useStyles();  \r\n  const { allChats, sendChatAction } = useContext(MessageContext);\r\n  const { userInfo } = useContext(AuthenticationContext);\r\n  const listRoom = Object.keys(allChats);\r\n\r\n  const [currentRoom, changeCurrentRoom] = useState(listRoom[0]);\r\n  const [message, setMessage] = useState(\"\"); \r\n  const token = localStorage.getItem('token');\r\n\r\n  const doChangeRoom = (room) => {\r\n    changeCurrentRoom(room);\r\n  }\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (!message.trim()) return;\r\n    sendChatAction({\r\n      token: token,\r\n      msg: message.trim(),\r\n      roomId: currentRoom\r\n    });\r\n    setMessage(\"\");\r\n  }\r\n  console.log(userInfo.userId);\r\n  return (\r\n    <Paper className={classes.DashBoard} elevation={3} >\r\n      <Typography variant=\"h3\" component=\"h3\">\r\n        Chat app\r\n      </Typography>\r\n      <Typography className={classes.username} variant=\"p\" component=\"p\">\r\n        <AccountMenu>\r\n          {userInfo.username}\r\n        </AccountMenu>\r\n      </Typography>\r\n      <div className={classes.roomDetails}>\r\n        Room Id: {currentRoom}\r\n        <div className={classes.flex}>\r\n        <CreateRoom />\r\n        <JoinRoom />\r\n        </div>\r\n      </div>\r\n      <div className={classes.flex}>\r\n        <ScrollToBottom mode=\"top\" className={classes.roomWindow}>\r\n          <List>\r\n            {\r\n              listRoom.map( (roomId, index) => \r\n                <RoomItem \r\n                  key={index}\r\n                  roomId={roomId}\r\n                  primary={allChats[roomId].name} \r\n                  currentRoom={currentRoom}\r\n                  onClick={() => doChangeRoom(roomId)}\r\n                />\r\n              )\r\n            }\r\n          </List>\r\n        </ScrollToBottom>\r\n        <div className={classes.chatWindow}>\r\n          <ScrollToBottom className={classes.messageWindow}>\r\n            {\r\n              allChats[currentRoom] && \r\n              allChats[currentRoom].messages.map( (message, index) => (\r\n                <div \r\n                  className={\r\n                    (userInfo.userId === message.user._id ) ?\r\n                    classes.myAccount : classes.friendAccount\r\n                  } \r\n                  key={index}\r\n\r\n                >\r\n                  <Chip\r\n                    avatar={<Avatar alt=\"avatar\" src={message.user.avatarUrl ? message.user.avatarUrl : \"/avatarDefault.png\"} />}\r\n                    label={message.user.name}\r\n                    className={classes.chip}\r\n                  />\r\n                  <Typography>{message.content}</Typography>\r\n                </div>\r\n\r\n              ))\r\n            }\r\n          </ScrollToBottom>\r\n          <form onSubmit={sendMessage}>\r\n            <div className={classes.flex}>\r\n              <TextField \r\n                className={classes.chatBox} \r\n                label=\"Send a message\" \r\n                value={message}\r\n                onChange={(e) => setMessage(e.target.value)}\r\n              />\r\n              <Button\r\n                type=\"submit\" \r\n                variant=\"contained\" \r\n                color=\"primary\" \r\n                className={classes.button} \r\n                size=\"small\"\r\n              >\r\n                Send\r\n              </Button>\r\n            </div>\r\n          </form>\r\n          \r\n        </div>\r\n      </div>\r\n      \r\n    </Paper>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default DashBoard;\r\n\r\n","import React from 'react';\r\n\r\nexport default function ConfirmationAccount() {\r\n\r\n    return <div>Please check your email to confirm your account</div>;\r\n}","import React, { useState, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Paper, TextField, Button, Typography } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { AuthenticationContext } from '../Store/UserStore';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  LoginPage: {\r\n    marginTop: \"100px\",\r\n    width: \"550px\",\r\n    margin: \"0 auto\",\r\n    padding: theme.spacing(3, 2),\r\n    paddingBottom: \"50px\"\r\n  },\r\n  disableButton: {\r\n    opacity: 0.5,\r\n    width: \"80%\",\r\n    padding: \"10px\",\r\n    marginTop: \"20px\",\r\n    backgroundColor: \"#1976d2\"\r\n  },\r\n  \r\n  alert: {\r\n    width: \"80%\",\r\n    margin: \"0 auto\"\r\n  },\r\n  input: {\r\n    width: \"80%\",\r\n    marginBottom: \"20px\"\r\n  },\r\n  button: {\r\n    width: \"80%\",\r\n    padding: \"10px\",\r\n    marginTop: \"20px\",\r\n    backgroundColor: \"#1976d2\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#115293\",\r\n    }\r\n  },\r\n  register: {\r\n    marginTop: \"30px\",\r\n    \"& a\": {\r\n      color: \"#1976d2\",\r\n      textDecoration: \"none\"\r\n    }\r\n  }\r\n}))\r\n\r\nfunction Login(props) {\r\n\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [disableButton, changeDisableButton] = useState(false);\r\n  const [alert, setAlert] = useState(\"\");\r\n\r\n  const { dispatch } = useContext(AuthenticationContext);\r\n\r\n  const doLogin = async (e) => {\r\n    e.preventDefault();\r\n    if (!email) {\r\n      setAlert(\"Please type your email\");\r\n      return;\r\n    }\r\n    if (!password) {\r\n      setAlert(\"Please type your password\");\r\n      return;\r\n    }\r\n\r\n    changeDisableButton(true);\r\n\r\n    try {\r\n      let res = await axios.post(\r\n        \"/auth/doLogin\",\r\n        { email, password }\r\n      );  \r\n      let result = res.data;\r\n\r\n      if (!result.success) {\r\n        setAlert(result.msg);\r\n        changeDisableButton(false);\r\n        return;\r\n      }\r\n      axios.defaults.headers.common['x-access-token'] = result.token;\r\n      localStorage.setItem('token', result.token);\r\n      const user = {\r\n        username: result.username,\r\n        userId: result.userId,\r\n        avatarUrl: result.avatarUrl,\r\n        isConfirmation: result.isConfirmation\r\n      }\r\n      \r\n      dispatch({\r\n        type: \"USER_LOGIN\",\r\n        payload: user\r\n      });\r\n      \r\n    } catch (e) {\r\n      console.log(e);\r\n    } \r\n\r\n  } \r\n  return (\r\n    <Paper className={classes.LoginPage} elevation={3}>\r\n      <Typography variant=\"h3\" component=\"h3\">\r\n        Login\r\n      </Typography>\r\n      <form className={classes.form} onSubmit={doLogin}>\r\n        {alert && <Alert className={classes.alert} severity=\"error\">{alert}</Alert>}\r\n        <TextField\r\n          className={classes.input}\r\n          label=\"Email\" \r\n          variant=\"filled\"\r\n          onChange={(e) => {setEmail(e.target.value)}}\r\n        />\r\n        <TextField \r\n          className={classes.input}\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          variant=\"filled\"\r\n          onChange={(e) => {setPassword(e.target.value)}}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          className={disableButton ? classes.disableButton : classes.button}\r\n          variant=\"contained\" \r\n          color=\"primary\"\r\n          disable={disableButton}\r\n        >\r\n          Login\r\n        </Button>\r\n      </form>\r\n      <div className={classes.register}>Don't have any account? <Link to=\"/register\">Register</Link></div>\r\n    </Paper>\r\n  );\r\n\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Paper, TextField, Button, Typography } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport axios from 'axios';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport { AuthenticationContext } from '../Store/UserStore';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  registerPage: {\r\n    marginTop: \"100px\",\r\n    width: \"550px\",\r\n    margin: \"0 auto\",\r\n    padding: theme.spacing(3, 2),\r\n    paddingBottom: \"50px\"\r\n  },\r\n  disableButton: {\r\n    opacity: 0.5,\r\n    width: \"80%\",\r\n    padding: \"10px\",\r\n    marginTop: \"20px\",\r\n    backgroundColor: \"#1976d2\"\r\n  },\r\n  \r\n  alert: {\r\n    width: \"80%\",\r\n    margin: \"0 auto\"\r\n  },\r\n  input: {\r\n    width: \"80%\",\r\n    marginBottom: \"20px\"\r\n  },\r\n  button: {\r\n    width: \"80%\",\r\n    padding: \"10px\",\r\n    marginTop: \"20px\",\r\n    backgroundColor: \"#1976d2\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#115293\",\r\n    }\r\n  },\r\n  register: {\r\n    marginTop: \"30px\",\r\n    \"& a\": {\r\n      color: \"#1976d2\",\r\n      textDecoration: \"none\"\r\n    }\r\n  }\r\n}))\r\n\r\nfunction Register(props) {\r\n  let history = useHistory();\r\n\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [disableButton, changeDisableButton] = useState(false);\r\n  const [alert, setAlert] = useState(\"\");\r\n\r\n  const { dispatch } = useContext(AuthenticationContext);\r\n\r\n  const doRegister = async (e) => {\r\n    e.preventDefault();\r\n    if (!name) {\r\n      setAlert(\"Please type your name\");\r\n      return;\r\n    }\r\n    if (!email) {\r\n      setAlert(\"Please type your email\");\r\n      return;\r\n    }\r\n    if (!password) {\r\n      setAlert(\"Please type your password\");\r\n      return;\r\n    }\r\n    if (!confirmPassword) {\r\n      setAlert(\"Please confirm your password\");\r\n      return;\r\n    }\r\n    if (confirmPassword !== password) {\r\n      setAlert(\"Password is not match\");\r\n      return;\r\n    }\r\n\r\n    changeDisableButton(true);\r\n\r\n    try {\r\n      let res = await axios.post(\r\n        \"/register\",\r\n        { email, password, name }\r\n      );  \r\n      let result = res.data;\r\n\r\n      if (!result.success) {\r\n        setAlert(result.msg);\r\n        changeDisableButton(false);\r\n        return;\r\n      }\r\n      axios.defaults.headers.common['x-access-token'] = result.token;\r\n      localStorage.setItem('token', result.token);\r\n      const user = {\r\n        username: result.username,\r\n        userId: result.userId,\r\n        avatarUrl: result.avatarUrl,\r\n        isConfirmation: result.isConfirmation\r\n      }\r\n      \r\n      dispatch({\r\n        type: \"USER_LOGIN\",\r\n        payload: user\r\n      });\r\n      history.push('/')\r\n      \r\n    } catch (e) {\r\n      console.log(e);\r\n    } \r\n    \r\n\r\n  } \r\n  return (\r\n    <Paper className={classes.registerPage} elevation={3}>\r\n      <Typography variant=\"h3\" component=\"h3\">\r\n        Register\r\n      </Typography>\r\n      <form className={classes.form} onSubmit={doRegister}>\r\n        {alert && <Alert className={classes.alert} severity=\"error\">{alert}</Alert>}\r\n        <TextField\r\n          className={classes.input}\r\n          label=\"Name\" \r\n          variant=\"filled\"\r\n          onChange={(e) => {setName(e.target.value)}}\r\n        />\r\n        <TextField\r\n          className={classes.input}\r\n          label=\"Email\"\r\n          variant=\"filled\"\r\n          onChange={(e) => {setEmail(e.target.value)}}\r\n        />\r\n        <TextField \r\n          className={classes.input}\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          variant=\"filled\"\r\n          onChange={(e) => {setPassword(e.target.value)}}\r\n        />\r\n        <TextField \r\n          className={classes.input}\r\n          label=\"Confirm \"\r\n          type=\"password\"\r\n          variant=\"filled\"\r\n          onChange={(e) => {setConfirmPassword(e.target.value)}}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          className={disableButton ? classes.disableButton : classes.button}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disable={disableButton}\r\n        >\r\n          Register\r\n        </Button>\r\n      </form>\r\n      <div className={classes.register}>Have an account? <Link to=\"/\">Login</Link></div>\r\n    </Paper>\r\n  );\r\n\r\n}\r\n\r\nexport default Register;\r\n","import React, { useContext } from 'react';\nimport './App.css';\n\nimport DashBoard from './components/DashBoard';\nimport ConfirmationAccount from './components/ConfirmationAccount';\nimport {\n  BrowserRouter as Router,\n  Route\n} from \"react-router-dom\";\n\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport { AuthenticationContext } from './Store/UserStore';\nimport MessageStore from './Store/MessageStore';\n\nfunction App() {\n  const { userInfo } = useContext(AuthenticationContext);\n\n  console.log(\"app\")\n  return (\n    <Router>\n      { userInfo.isLoggedIn ? ( \n          <MessageStore >\n            <div className=\"App\">\n                <Route exact path=\"/\">\n                  { userInfo.isConfirmation ? <DashBoard /> : <ConfirmationAccount /> }\n                </Route>\n            </div>\n          </MessageStore>\n        ) : (\n          <div className=\"App\">\n                <Route exact path=\"/\">\n                  <Login />\n                </Route>\n                <Route exact path=\"/register\">\n                  <Register />\n                </Route>\n            </div>\n        )\n      }\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport UserStore from './Store/UserStore';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserStore>\n      <App />\n    </UserStore>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}